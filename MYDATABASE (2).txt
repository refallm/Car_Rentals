CREATE DATABASE MYCAR;
CREATE TABLE MYCAR.USERS (
USER_ID INT primary KEY
);
CREATE TABLE MYCAR.CARS (
CARS_ID INT
);
CREATE TABLE MYCAR.CARRENTAL (
RENTAL_ID INT
);
ALTER TABLE MYCAR.USERS
MODIFY USER_NAME char(20);
ALTER TABLE MYCAR.USERS
ADD PHONENUMBER VARCHAR(13);
ALTER TABLE MYCAR.USERS
ADD PASS_WORD VARCHAR(10);
ALTER TABLE MYCAR.USERS
MODIFY PASS_WORD VARCHAR(50);
ALTER TABLE MYCAR.USERS
ADD PRIMARY KEY (USER_ID);
ALTER TABLE MYCAR.users
MODIFY PHONENUMBER CHAR(13) NOT NULL;
INSERT INTO MYCAR.USERS (USER_ID, USER_NAME, PHONENUMBER, PASS_WORD) 
VALUES
    (1424, 'TAIF', '996-562981125', 'TAIF77'),
    (1022, 'REFAL', '996-582638279', '66RE1111'),
    (2222, 'RAHAF', '996-552392838', 'RA12562'),
    (2210, 'LUJAIN', '996-565123259', 'LL78262');
ALTER TABLE MYCAR.CARS
ADD YEAR INT NOT NULL;
ALTER TABLE MYCAR.CARS
ADD TYPE VARCHAR(50) NOT NULL;
ALTER TABLE MYCAR.CARS
ADD STATUS ENUM('AVAILABLE','RENTED') NOT NULL;
ALTER TABLE MYCAR.CARS
ADD PRICE_in_day double NOT NULL;
ALTER TABLE MYCAR.CARS
ADD CarCapacity int NOT NULL;
ALTER TABLE MYCAR.CARS
ADD car_color varchar(20) NOT NULL;
ALTER TABLE MYCAR.CARS
ADD company varchar(30) NOT NULL;
ALTER TABLE MYCAR.CARS
ADD transmission varchar(50) NOT NULL;
ALTER TABLE MYCAR.CARS
ADD category enum('Economy','luxury','sports','utility') NOT NULL;
ALTER TABLE MYCAR.CARS
modify transmission enum('Automatic','Manual')NOT NULL;
ALTER TABLE MYCAR.CARS 
RENAME COLUMN CARS_ID TO CAR_ID;
ALTER TABLE MYCAR.CARS
ADD PRIMARY KEY (CAR_ID);
INSERT INTO Cars (Car_ID, Year, Type, Status, Price_IN_Day, CarCapacity, car_color, Company, Transmission, Category)
VALUES
(1169, 2019, 'Sedan', 'Available', 50, 5, 'Red', 'Toyota', 'Automatic', 'Economy'),
(2853, 2020, 'SUV', 'Rented', 75, 7, 'Black', 'Ford', 'Automatic', 'Luxury'),
(3690, 2024, 'Convertible', 'Available', 120, 4, 'Blue', 'BMW', 'Manual', 'Sports'),
(7428, 2016, 'Hatchback', 'Available', 40, 6, 'White', 'Honda', 'Automatic', 'Economy'),
(5393, 2016, 'Minivan', 'Rented', 60, 8, 'Silver', 'Toyota', 'Automatic', 'Utility');
ALTER TABLE MYCAR.CARRENTAL
ADD COLUMN USER_ID INT,
ADD COLUMN CAR_ID INT,
ADD COLUMN START_DATE DATE,
ADD COLUMN END_DATE DATE,
ADD COLUMN RENTAL_STATUS ENUM('active', 'pending', 'canceled', 'completed'),
ADD COLUMN OVERDUE_DAYS INT DEFAULT 0,
ADD COLUMN FEE_OVERDUE DOUBLE DEFAULT 0,
ADD CONSTRAINT fk_user FOREIGN KEY (USER_ID) REFERENCES MYCAR.USERS(USER_ID),
ADD CONSTRAINT fk_car FOREIGN KEY (CAR_ID) REFERENCES MYCAR.CARS(CAR_ID);
ALTER TABLE MYCAR.CARRENTAL
ADD PRIMARY KEY (RENTAL_ID);
CREATE TRIGGER calculate_fee_overdue
BEFORE INSERT ON MYCAR.CARRENTAL
FOR EACH ROW
BEGIN
    SET NEW.FEE_OVERDUE = (SELECT PRICE_IN_DAY FROM MYCAR.CARS WHERE CAR_ID = NEW.CAR_ID) * NEW.OVERDUE_DAYS;
END $$
DELIMITER ;
ALTER TABLE MYCAR.CARRENTAL
MODIFY RENTAL_STATUS ENUM('active', 'confirmed', 'late', 'canceled', 'completed');
INSERT INTO MYCAR.USERS (USER_ID, USER_NAME, PHONENUMBER, PASS_WORD)
VALUES (1500, 'Najwa', '996-500123456', 'Najwa23');
INSERT INTO MYCAR.CARRENTAL (RENTAL_ID, USER_ID, CAR_ID, START_DATE, END_DATE, RENTAL_STATUS, OVERDUE_DAYS)
VALUES 
    (1010, 1424, 1169, CURDATE(), CURDATE() + INTERVAL 5 DAY, 'active', 0),  
    (1011, 1022, 2853, CURDATE() + INTERVAL 5 DAY, CURDATE() + INTERVAL 10 DAY, 'confirmed', 0), 
    (1012, 2222, 3690, CURDATE() - INTERVAL 10 DAY, CURDATE() - INTERVAL 5 DAY, 'late', 5),  
    (1013, 2210, 7428, CURDATE() - INTERVAL 7 DAY, CURDATE() - INTERVAL 3 DAY, 'canceled', 0),  
    (1014, 1500, 1169, CURDATE() - INTERVAL 20 DAY, CURDATE() - INTERVAL 15 DAY, 'completed', 0); 
DELIMITER //
CREATE TRIGGER update_rental_status_before_start
BEFORE UPDATE ON MYCAR.CARRENTAL
FOR EACH ROW
BEGIN
    IF OLD.RENTAL_STATUS = 'confirmed' AND NEW.START_DATE <= CURDATE() THEN
        SET NEW.RENTAL_STATUS = 'active';
    END IF;
END //
DELIMITER ;
DELIMITER //
CREATE TRIGGER update_rental_status_to_late
BEFORE UPDATE ON MYCAR.CARRENTAL
FOR EACH ROW
BEGIN
    IF OLD.RENTAL_STATUS = 'active' AND NEW.END_DATE < CURDATE() AND NEW.RENTAL_STATUS != 'completed' THEN
        SET NEW.RENTAL_STATUS = 'late';
    END IF;
END //
DELIMITER ;
UPDATE CARS c
JOIN carrental r ON c.car_id = r.car_id
SET c.status = 'rented'
WHERE r.rental_status IN ('active', 'late');
USE MYCAR;
SELECT * FROM users;
USE MYCAR;
SELECT * FROM 
use MYCAR;
SHOW COLUMNS FROM users;
ALTER TABLE Users
MODIFY COLUMN PASS_WORD VARCHAR(50) NOT NULL;
ALTER TABLE Users
MODIFY COLUMN PHONENUMBER CHAR(13) ;
USE MYCAR;
DELIMITER $$
CREATE TRIGGER update_car_status_after_rental
AFTER UPDATE ON MYCAR.CARRENTAL
FOR EACH ROW
BEGIN
    IF NEW.RENTAL_STATUS IN ('active', 'late') THEN
        UPDATE MYCAR.CARS 
        SET STATUS = 'rented'
        WHERE CAR_ID = NEW.CAR_ID;
    ELSE
        UPDATE MYCAR.CARS 
        SET STATUS = 'available'
        WHERE CAR_ID = NEW.CAR_ID;
    END IF;
END $$
DELIMITER ;
UPDATE MYCAR.CARS c
JOIN MYCAR.CARRENTAL r ON c.CAR_ID = r.CAR_ID
SET c.STATUS = CASE
    WHEN r.RENTAL_STATUS IN ('active', 'late') THEN 'rented'
    ELSE 'available'
END;
ALTER TABLE MYCAR.CARS
MODIFY COLUMN STATUS ENUM('AVAILABLE', 'RENTED')  DEFAULT 'AVAILABLE';
select * from cars
UPDATE MYCAR.CARS
SET STATUS = 'AVAILABLE'
WHERE CAR_ID = 5393;

